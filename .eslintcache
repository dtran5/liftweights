[{"C:\\Users\\dantr\\Documents\\Programming\\liftweights\\src\\index.js":"1","C:\\Users\\dantr\\Documents\\Programming\\liftweights\\src\\App.js":"2","C:\\Users\\dantr\\Documents\\Programming\\liftweights\\src\\components\\Navigation\\MainNavigation.js":"3","C:\\Users\\dantr\\Documents\\Programming\\liftweights\\src\\components\\Navigation\\NavigationLinks.js":"4","C:\\Users\\dantr\\Documents\\Programming\\liftweights\\src\\components\\Days\\WorkoutDays.js":"5","C:\\Users\\dantr\\Documents\\Programming\\liftweights\\src\\components\\Days\\WorkoutDay.js":"6","C:\\Users\\dantr\\Documents\\Programming\\liftweights\\src\\components\\Days\\RenderEachExercise.js":"7","C:\\Users\\dantr\\Documents\\Programming\\liftweights\\src\\components\\Calendar\\Calendar.js":"8","C:\\Users\\dantr\\Documents\\Programming\\liftweights\\src\\components\\Forms\\RecordWorkout.js":"9","C:\\Users\\dantr\\Documents\\Programming\\liftweights\\src\\components\\Forms\\Login.js":"10","C:\\Users\\dantr\\Documents\\Programming\\liftweights\\src\\components\\Forms\\Signup.js":"11","C:\\Users\\dantr\\Documents\\Programming\\liftweights\\src\\contexts\\AuthContext.js":"12","C:\\Users\\dantr\\Documents\\Programming\\liftweights\\src\\firebase.js":"13","C:\\Users\\dantr\\Documents\\Programming\\liftweights\\src\\components\\Dashboard\\Dashboard.js":"14","C:\\Users\\dantr\\Documents\\Programming\\liftweights\\src\\components\\Routes\\PrivateRoutes.js":"15","C:\\Users\\dantr\\Documents\\Programming\\liftweights\\src\\components\\Forms\\ForgotPassword.js":"16","C:\\Users\\dantr\\Documents\\Programming\\liftweights\\src\\components\\Profile\\UpdateProfile.js":"17","C:\\Users\\dantr\\Documents\\Programming\\liftweights\\src\\components\\Test.js":"18"},{"size":198,"mtime":1611950816827,"results":"19","hashOfConfig":"20"},{"size":1704,"mtime":1613083070115,"results":"21","hashOfConfig":"20"},{"size":752,"mtime":1612991274389,"results":"22","hashOfConfig":"20"},{"size":1311,"mtime":1612991366992,"results":"23","hashOfConfig":"20"},{"size":544,"mtime":1612470339825,"results":"24","hashOfConfig":"20"},{"size":1819,"mtime":1612991457240,"results":"25","hashOfConfig":"20"},{"size":1915,"mtime":1613083031560,"results":"26","hashOfConfig":"20"},{"size":6359,"mtime":1611872047789,"results":"27","hashOfConfig":"20"},{"size":4188,"mtime":1613083021202,"results":"28","hashOfConfig":"20"},{"size":3214,"mtime":1612380040895,"results":"29","hashOfConfig":"20"},{"size":3977,"mtime":1613004028054,"results":"30","hashOfConfig":"20"},{"size":4264,"mtime":1613004025554,"results":"31","hashOfConfig":"20"},{"size":673,"mtime":1612918083211,"results":"32","hashOfConfig":"20"},{"size":1702,"mtime":1612385137918,"results":"33","hashOfConfig":"20"},{"size":1021,"mtime":1612385138794,"results":"34","hashOfConfig":"20"},{"size":3047,"mtime":1612385532019,"results":"35","hashOfConfig":"20"},{"size":4703,"mtime":1612389284171,"results":"36","hashOfConfig":"20"},{"size":618,"mtime":1612486780778,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"ov5d02",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"40"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"40"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"40"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"40"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"40"},"C:\\Users\\dantr\\Documents\\Programming\\liftweights\\src\\index.js",[],["82","83"],"C:\\Users\\dantr\\Documents\\Programming\\liftweights\\src\\App.js",[],"C:\\Users\\dantr\\Documents\\Programming\\liftweights\\src\\components\\Navigation\\MainNavigation.js",["84"],"import React, { useContext } from 'react';\r\nimport { NavLink } from 'react-router-dom'\r\nimport { Navbar } from 'react-bootstrap'\r\nimport { useAuth } from '../../contexts/AuthContext'\r\n\r\nimport NavigationLinks from './NavigationLinks'\r\n\r\nconst MainNavigation = () => {\r\n    const { currentUser } = useAuth()\r\n    \r\n    \r\n\r\n    return (\r\n        <Navbar bg=\"secondary\" expand=\"lg\">\r\n            { currentUser \r\n            ? <NavLink to='/' exact><Navbar.Brand>{currentUser.email}</Navbar.Brand></NavLink>\r\n            : <NavLink to='/' exact><Navbar.Brand>Lift Weights</Navbar.Brand></NavLink>}\r\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n            <NavigationLinks />\r\n        </Navbar>\r\n    )\r\n}\r\n\r\nexport default MainNavigation","C:\\Users\\dantr\\Documents\\Programming\\liftweights\\src\\components\\Navigation\\NavigationLinks.js",[],"C:\\Users\\dantr\\Documents\\Programming\\liftweights\\src\\components\\Days\\WorkoutDays.js",[],"C:\\Users\\dantr\\Documents\\Programming\\liftweights\\src\\components\\Days\\WorkoutDay.js",[],["85","86"],"C:\\Users\\dantr\\Documents\\Programming\\liftweights\\src\\components\\Days\\RenderEachExercise.js",[],"C:\\Users\\dantr\\Documents\\Programming\\liftweights\\src\\components\\Calendar\\Calendar.js",[],["87","88"],"C:\\Users\\dantr\\Documents\\Programming\\liftweights\\src\\components\\Forms\\RecordWorkout.js",["89","90"],"import React, { useState, useRef, useEffect } from 'react';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport { db } from '../../firebase';\r\nimport { useAuth } from '../../contexts/AuthContext'\r\nimport RenderEachExercise from '../Days/RenderEachExercise';\r\n\r\n\r\n\r\nconst RecordWorkout = () => {\r\n    const [loading, setLoading] = useState(false)\r\n    const [exerciseList, setExerciseList] = useState([])\r\n    //grab the date from URL and use it as document name in database\r\n    const date = useParams().date;\r\n    //grab unique id created from database authentication\r\n    const { currentUser: { uid } }  = useAuth()\r\n    const nameRef = useRef();\r\n    const setsRef = useRef()\r\n    const repsRef = useRef()\r\n    const weightRef = useRef()\r\n    \r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        setLoading(true)\r\n        \r\n\r\n        db.collection(\"users\")\r\n          .doc(uid)\r\n          .collection(\"dates\")\r\n          .doc(date)\r\n          .collection(\"exercise-details\")\r\n          .doc()\r\n          .set({\r\n            name: nameRef.current.value,\r\n            sets: setsRef.current.value,\r\n            reps: repsRef.current.value,\r\n            weight: weightRef.current.value\r\n        }).then(()=>{\r\n            console.log('worked');\r\n            \r\n        }).catch(()=>{\r\n            console.log('did not work');\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        getExerciseDetails()\r\n    }, [])\r\n\r\n    //onSnapshot is an active listener that listens for changes to the collection so when user adds new exercise, it is immediately fetched and displayed\r\n    //onSnapshot returns a callback for us to work on given documents\r\n    function getExerciseDetails() {\r\n        db.collection('users')\r\n          .doc(uid)\r\n          .collection(\"dates\")\r\n          .doc(date)\r\n          .collection('exercise-details')\r\n          .onSnapshot(handleSnapshot)\r\n    }\r\n\r\n    //within the callback that onSnapshot provides, we are passed a snapshot of our data. It containes the documents in the collection. map through our docs array to return our data\r\n    function handleSnapshot(snapshot) {\r\n        const exerciseList = snapshot.docs.map((exercise) => {\r\n            return { id: exercise.id, ...exercise.data() }\r\n        })\r\n        setExerciseList(exerciseList)\r\n        \r\n        \r\n    }\r\n    \r\n    return (\r\n        <>\r\n            <div>\r\n                {exerciseList.map((exercise) => (\r\n                   <RenderEachExercise key={exercise.id} exercise={exercise} /> \r\n                ))}\r\n            </div>  \r\n            <Link to={'/workouts'}>Back</Link>\r\n            <Form onSubmit={handleSubmit} className=\"container mt-5\">\r\n                <Form.Group controlId=\"exercise\">\r\n                    <Form.Label>Exercise</Form.Label>\r\n                    <Form.Control ref={nameRef} type=\"text\" placeholder=\"Exercise Name\" />\r\n                    <Form.Text className=\"text-muted\">\r\n                    \r\n                    </Form.Text>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"sets\">\r\n                    <Form.Label>Sets</Form.Label>\r\n                    <Form.Control ref={setsRef} type=\"text\" placeholder=\"How many sets did you do?\" />\r\n                </Form.Group>\r\n                <Form.Group controlId=\"reps\">\r\n                    <Form.Label>Reps</Form.Label>\r\n                    <Form.Control ref={repsRef} type=\"text\" placeholder=\"How many reps per set?\" />\r\n                    <Form.Text className=\"text-muted\">\r\n                    \r\n                    </Form.Text>\r\n                </Form.Group>\r\n                <Form.Group controlId=\"weight\">\r\n                    <Form.Label>Weight</Form.Label>\r\n                    <Form.Control ref={weightRef} type=\"text\" placeholder=\"How much gravity did you fight?\" />\r\n                    <Form.Text className=\"text-muted\">\r\n                    \r\n                    </Form.Text>\r\n                </Form.Group>\r\n                <Button variant=\"primary\" type=\"submit\">\r\n                    Submit\r\n                </Button>\r\n            </Form>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default RecordWorkout","C:\\Users\\dantr\\Documents\\Programming\\liftweights\\src\\components\\Forms\\Login.js",[],"C:\\Users\\dantr\\Documents\\Programming\\liftweights\\src\\components\\Forms\\Signup.js",["91","92"],"import React, { useRef, useState} from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { Card, Form, Button, Alert, Container } from 'react-bootstrap'\r\n//this is our way to use our context that we created in AuthContext\r\nimport { useAuth } from '../../contexts/AuthContext'\r\nimport { db } from '../../firebase'\r\n\r\n\r\n\r\nfunction Signup() {\r\n    const emailRef = useRef()\r\n    const passwordRef = useRef()\r\n    const passwordConfirmRef = useRef()\r\n    const { signup, uid } = useAuth()\r\n    const [error, setError] = useState('')\r\n    const [loading, setLoading] = useState(false)\r\n    const history = useHistory()\r\n\r\n    //this is an async function - had to check passwords and get back to us\r\n    async function handleSubmit(e) {\r\n        e.preventDefault()\r\n        \r\n        if (passwordRef.current.value !== passwordConfirmRef.current.value) {\r\n            //we return here because we want to immediately exit the function and not keep going\r\n            //if there is an error\r\n            return setError('Passwords do not match')\r\n        }\r\n\r\n        //if its successful it will - set error to empty and set a loading state which will\r\n        //disable the submit button so users dont keep clicking and signing up\r\n        try {\r\n            setError('')\r\n            setLoading(true)\r\n            await signup(emailRef.current.value, passwordRef.current.value)\r\n            history.push('/')\r\n        } catch {\r\n            setError('Failed to create an account')\r\n        }\r\n        //after everything is done, setloading back to false - this is done after it is done\r\n        //awaiting the signup function\r\n        setLoading(false)\r\n    } \r\n\r\n    //user is added to user collection with their own uid as a document\r\n    // function addUserToDatabase(uid) {\r\n    //     db.collection(\"users\").doc(uid).set({\r\n    //         email: emailRef.current.value\r\n\r\n    //     })\r\n    // }\r\n\r\n\r\n    //if we are currently loading, dont want to be able to resubmit form!\r\n    return (\r\n        <>\r\n            <Container\r\n                className=\"d-flex align-items-center justify-content-center\"\r\n                style={{ minHeight: \"100vh\" }}\r\n            >   \r\n                <div className=\"w-100\" style={{ maxWidth: \"400px\" }}>\r\n                    <Card>\r\n                        <Card.Body>\r\n                            <h2 className=\"text-center mb-4\">Sign Up</h2>\r\n                            {error && <Alert variant=\"danger\">{error}</Alert>}\r\n                            <Form onSubmit={handleSubmit}>\r\n                                <Form.Group id=\"email\">\r\n                                    <Form.Label>Email</Form.Label>\r\n                                    <Form.Control type=\"email\" ref={emailRef} required />\r\n                                </Form.Group>\r\n                                <Form.Group id=\"password\">\r\n                                    <Form.Label>Password</Form.Label>\r\n                                    <Form.Control type=\"password\" ref={passwordRef} required />\r\n                                </Form.Group>\r\n                                <Form.Group id=\"password-confirm\">\r\n                                    <Form.Label>Confirm Password</Form.Label>\r\n                                    <Form.Control type=\"password\" ref={passwordConfirmRef} required />\r\n                                </Form.Group>\r\n                                <Button disabled={loading} className=\"w-100\" type=\"submit\">\r\n                                    Sign Up\r\n                                </Button>\r\n                            </Form>\r\n                        </Card.Body>\r\n                    </Card>\r\n                    <div className=\"w-100 text-center mt-2\">\r\n                        Already have an account? <Link to=\"/login\">Log In</Link>\r\n                    </div>\r\n                </div>\r\n                \r\n            </Container>\r\n            \r\n            \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Signup\r\n","C:\\Users\\dantr\\Documents\\Programming\\liftweights\\src\\contexts\\AuthContext.js",["93","94"],"import React, { useContext, useState, useEffect } from 'react';\r\n//imports the auth module we just created in our firebase.js file\r\nimport { auth, db } from '../firebase'\r\n\r\n//creates a context object with name AuthContext\r\n//use this context inside of provider\r\nconst AuthContext = React.createContext()\r\n\r\n//this function allows us to use this context\r\nexport function useAuth() {\r\n    //This functions returns our useContext hook which takes in the Context object\r\n    //we created that we want to make use of. //This returns us the value that we passed in\r\n    //down at the provider - THE VALUE OBJECT!\r\n    return useContext(AuthContext)\r\n}\r\n\r\n//children props comes from context\r\nexport function AuthProvider({ children }) {\r\n    //our state for current user, by default we have no user\r\n    const[currentUser, setCurrentUser] = useState()\r\n    //initially we are loading and as soon as we get that first useEffect thats runs, it means\r\n    //firebase did the verification to see if there was a user\r\n    const [loading, setLoading] = useState(true)\r\n    const [uid, setUid] = useState('')\r\n\r\n    //function uses our auth module (firebase) to signup a user\r\n    //this method comes from firebase\r\n    //returns a promise\r\n    //whenever we call createUserWithEmailAndPassword it calls setCurrentUser and\r\n    //sets the user for us within onAuthStateChanged\r\n    //firebase creates the local storage for us as well as tokens - FIND THIS IN VIDEO\r\n    //gotta make sure we return these functions because they are promises\r\n    function signup(email, password) {\r\n        return auth.createUserWithEmailAndPassword(email, password)\r\n    }\r\n\r\n    async function login (email, password) {\r\n        return auth.signInWithEmailAndPassword(email, password)\r\n    }\r\n\r\n    function logout () {\r\n        return auth.signOut()\r\n    }\r\n\r\n    function resetPassword(email) {\r\n        return auth.sendPasswordResetEmail(email)\r\n    }\r\n\r\n    function updateEmail (email) {\r\n        return currentUser.updateEmail(email)\r\n    }\r\n\r\n    function updatePassword (password) {\r\n        return currentUser.updatePassword(password)\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        //onAuthStateChanged is firebase recommended method for getting the\r\n        //current user. We set an observer on the auth object\r\n        //we want onAuthStateChanged to be inside a useEffect and not in our render\r\n        //because we only want this to run when we mount our component (first time it loads)\r\n        //Unsubscribe to avoid memory leaks - when we initialize auth.onAuthStateChanged we\r\n        //create a listener to continue to listen even after we have stopped using it, wasting\r\n        //memory. to prevent we unsubscribe from listener when we unmount app\r\n        //auth.onAuthStateChanged when called, will return a method that when we call unsubscribe\r\n        //it will unsubscribe the onauthostatechanged event\r\n        const unsubscribe = auth.onAuthStateChanged(user => {\r\n            setCurrentUser(user)\r\n            //Whenever auth state actually changes, it means we are done loading\r\n            setLoading(false)\r\n            \r\n            \r\n        })\r\n        //this will unsubscribe us from the onauthstatechanged listener when we unmount the\r\n        //component\r\n        return unsubscribe\r\n    }, [])\r\n    \r\n    //this object is passed to our provider, we want current user\r\n    //also pass signup so we can use anywhere\r\n    const value = {\r\n        uid,\r\n        currentUser,\r\n        signup,\r\n        login,\r\n        logout,\r\n        resetPassword,\r\n        updateEmail,\r\n        updatePassword\r\n    }\r\n\r\n    //children are the components between our <AuthProvider> Tags in the\r\n    //App.js file!\r\n    //the value returns all of the information that can be accessed from any of our children\r\n    //components - in this case it is our authentication info\r\n    //simple check to see if we are loading because if we are not loading then we render the\r\n    //children otherwise we want to not render the children because we are loading\r\n    //none of our application will render unless we have our user for the first time\r\n    return (\r\n        <AuthContext.Provider value={value}>\r\n            {!loading && children}\r\n        </AuthContext.Provider>\r\n    )\r\n}\r\n\r\n","C:\\Users\\dantr\\Documents\\Programming\\liftweights\\src\\firebase.js",[],"C:\\Users\\dantr\\Documents\\Programming\\liftweights\\src\\components\\Dashboard\\Dashboard.js",[],"C:\\Users\\dantr\\Documents\\Programming\\liftweights\\src\\components\\Routes\\PrivateRoutes.js",[],"C:\\Users\\dantr\\Documents\\Programming\\liftweights\\src\\components\\Forms\\ForgotPassword.js",[],"C:\\Users\\dantr\\Documents\\Programming\\liftweights\\src\\components\\Profile\\UpdateProfile.js",[],"C:\\Users\\dantr\\Documents\\Programming\\liftweights\\src\\components\\Test.js",["95"],"import React, { useState } from 'react';\r\n\r\nimport { db } from '../firebase'\r\n\r\n\r\nconst Test = () => {\r\n    \r\n\r\n    db.collection(\"users\")\r\n      .add({\r\n          name: 'John',\r\n          email: \"john@smith.com\"\r\n      })\r\n      .then(() => {\r\n          alert(\"worked\")\r\n      })\r\n      .catch(()=>{\r\n          alert(\"failed\")\r\n      })\r\n\r\n    // db.collection('users')\r\n    //   .get()\r\n    //   .then( snapshot => {\r\n    //       console.log(snapshot);\r\n    //   })\r\n    //   .catch(error => console.log(error))\r\n    return (\r\n        <div>\r\n          Test\r\n        </div>\r\n    \r\n      )\r\n}\r\n\r\n\r\nexport default Test",{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","severity":1,"message":"101","line":1,"column":17,"nodeType":"102","messageId":"103","endLine":1,"endColumn":27},{"ruleId":"96","replacedBy":"104"},{"ruleId":"98","replacedBy":"105"},{"ruleId":"96","replacedBy":"106"},{"ruleId":"98","replacedBy":"107"},{"ruleId":"100","severity":1,"message":"108","line":11,"column":12,"nodeType":"102","messageId":"103","endLine":11,"endColumn":19},{"ruleId":"109","severity":1,"message":"110","line":49,"column":8,"nodeType":"111","endLine":49,"endColumn":10,"suggestions":"112"},{"ruleId":"100","severity":1,"message":"113","line":6,"column":10,"nodeType":"102","messageId":"103","endLine":6,"endColumn":12},{"ruleId":"100","severity":1,"message":"114","line":14,"column":21,"nodeType":"102","messageId":"103","endLine":14,"endColumn":24},{"ruleId":"100","severity":1,"message":"113","line":3,"column":16,"nodeType":"102","messageId":"103","endLine":3,"endColumn":18},{"ruleId":"100","severity":1,"message":"115","line":24,"column":17,"nodeType":"102","messageId":"103","endLine":24,"endColumn":23},{"ruleId":"100","severity":1,"message":"116","line":1,"column":17,"nodeType":"102","messageId":"103","endLine":1,"endColumn":25},"no-native-reassign",["117"],"no-negated-in-lhs",["118"],"no-unused-vars","'useContext' is defined but never used.","Identifier","unusedVar",["117"],["118"],["117"],["118"],"'loading' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getExerciseDetails'. Either include it or remove the dependency array.","ArrayExpression",["119"],"'db' is defined but never used.","'uid' is assigned a value but never used.","'setUid' is assigned a value but never used.","'useState' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"120","fix":"121"},"Update the dependencies array to be: [getExerciseDetails]",{"range":"122","text":"123"},[1486,1488],"[getExerciseDetails]"]