[{"C:\\Users\\dantr\\Documents\\Programming\\liftweights\\src\\index.js":"1","C:\\Users\\dantr\\Documents\\Programming\\liftweights\\src\\App.js":"2","C:\\Users\\dantr\\Documents\\Programming\\liftweights\\src\\components\\Navigation\\MainNavigation.js":"3","C:\\Users\\dantr\\Documents\\Programming\\liftweights\\src\\components\\Navigation\\NavigationLinks.js":"4","C:\\Users\\dantr\\Documents\\Programming\\liftweights\\src\\components\\Days\\WorkoutDays.js":"5","C:\\Users\\dantr\\Documents\\Programming\\liftweights\\src\\components\\Days\\WorkoutDay.js":"6","C:\\Users\\dantr\\Documents\\Programming\\liftweights\\src\\components\\Days\\RenderEachExercise.js":"7","C:\\Users\\dantr\\Documents\\Programming\\liftweights\\src\\components\\Calendar\\Calendar.js":"8","C:\\Users\\dantr\\Documents\\Programming\\liftweights\\src\\components\\Forms\\RecordWorkout.js":"9","C:\\Users\\dantr\\Documents\\Programming\\liftweights\\src\\components\\Forms\\Login.js":"10","C:\\Users\\dantr\\Documents\\Programming\\liftweights\\src\\components\\Forms\\Signup.js":"11","C:\\Users\\dantr\\Documents\\Programming\\liftweights\\src\\contexts\\AuthContext.js":"12","C:\\Users\\dantr\\Documents\\Programming\\liftweights\\src\\firebase.js":"13","C:\\Users\\dantr\\Documents\\Programming\\liftweights\\src\\components\\Dashboard\\Dashboard.js":"14","C:\\Users\\dantr\\Documents\\Programming\\liftweights\\src\\components\\Routes\\PrivateRoutes.js":"15","C:\\Users\\dantr\\Documents\\Programming\\liftweights\\src\\components\\Forms\\ForgotPassword.js":"16","C:\\Users\\dantr\\Documents\\Programming\\liftweights\\src\\components\\Profile\\UpdateProfile.js":"17","C:\\Users\\dantr\\Documents\\Programming\\liftweights\\src\\components\\Test.js":"18"},{"size":198,"mtime":1611950816827,"results":"19","hashOfConfig":"20"},{"size":4129,"mtime":1612486776617,"results":"21","hashOfConfig":"20"},{"size":502,"mtime":1611876298967,"results":"22","hashOfConfig":"20"},{"size":1459,"mtime":1612896962956,"results":"23","hashOfConfig":"20"},{"size":544,"mtime":1612470339825,"results":"24","hashOfConfig":"20"},{"size":1819,"mtime":1612486779079,"results":"25","hashOfConfig":"20"},{"size":637,"mtime":1611614140165,"results":"26","hashOfConfig":"20"},{"size":6359,"mtime":1611872047789,"results":"27","hashOfConfig":"20"},{"size":2931,"mtime":1612486778377,"results":"28","hashOfConfig":"20"},{"size":3214,"mtime":1612380040895,"results":"29","hashOfConfig":"20"},{"size":4010,"mtime":1612896695605,"results":"30","hashOfConfig":"20"},{"size":4803,"mtime":1612486777549,"results":"31","hashOfConfig":"20"},{"size":673,"mtime":1612486779869,"results":"32","hashOfConfig":"20"},{"size":1702,"mtime":1612385137918,"results":"33","hashOfConfig":"20"},{"size":1021,"mtime":1612385138794,"results":"34","hashOfConfig":"20"},{"size":3047,"mtime":1612385532019,"results":"35","hashOfConfig":"20"},{"size":4703,"mtime":1612389284171,"results":"36","hashOfConfig":"20"},{"size":618,"mtime":1612486780778,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"ov5d02",{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"40"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"40"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"40"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"40"},"C:\\Users\\dantr\\Documents\\Programming\\liftweights\\src\\index.js",[],["79","80"],"C:\\Users\\dantr\\Documents\\Programming\\liftweights\\src\\App.js",["81"],"import React from 'react';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport { AuthProvider } from './contexts/AuthContext';\r\n\r\n\r\nimport MainNavigation from './components/Navigation/MainNavigation'\r\nimport Login from './components/Forms/Login'\r\nimport WorkoutDays from './components/Days/WorkoutDays';\r\nimport WorkoutDay from './components/Days/WorkoutDay'\r\nimport RecordWorkout from './components/Forms/RecordWorkout';\r\nimport Dashboard from './components/Dashboard/Dashboard'\r\nimport Signup from './components/Forms/Signup';\r\nimport PrivateRoute from './components/Routes/PrivateRoutes';\r\nimport ForgotPassword from './components/Forms/ForgotPassword';\r\nimport UpdateProfile from './components/Profile/UpdateProfile';\r\nimport Test from './components/Test';\r\n\r\n\r\nconst App = () => {\r\n\r\n  \r\n\r\n  let workoutData = [\r\n    \r\n    {\r\n        date: 'Jan 28, 2021',\r\n        id: '01-28-2021',\r\n        exercises: [\r\n            {\r\n                name: 'Bench Press',\r\n                sets: 3,\r\n                reps: 10,\r\n                weight: 135\r\n  \r\n            },\r\n            {\r\n                name: 'Back Squat',\r\n                sets: 3,\r\n                reps: 10,\r\n                weight: 315\r\n  \r\n            },\r\n            {\r\n                name: 'Deadlift',\r\n                sets: 3,\r\n                reps: 10,\r\n                weight: 225\r\n  \r\n            }\r\n        ]\r\n    },\r\n    {\r\n        date: 'Jan 29, 2021',\r\n        id: '01-29-2021',\r\n        exercises: [\r\n            {\r\n                name: 'Overhead Press',\r\n                sets: 3,\r\n                reps: 10,\r\n                weight: 95\r\n  \r\n            },\r\n            {\r\n                name: 'Reverse Lunges',\r\n                sets: 3,\r\n                reps: 10,\r\n                weight: 225\r\n  \r\n            },\r\n            {\r\n                name: 'Skullcrushers',\r\n                sets: 3,\r\n                reps: 10,\r\n                weight: 65\r\n  \r\n            }\r\n        ]\r\n    },\r\n    {\r\n      date: 'Jan 30, 2021',\r\n      id: '01-30-2021',\r\n      exercises: [\r\n          {\r\n              name: 'Barbell Row',\r\n              sets: 1,\r\n              reps: 12,\r\n              weight: 135\r\n\r\n          },\r\n          {\r\n              name: 'Pullups',\r\n              sets: 5,\r\n              reps: 5,\r\n              weight: 315\r\n\r\n          },\r\n          {\r\n              name: 'Bicep Curls',\r\n              sets: 3,\r\n              reps: 20,\r\n              weight: 225\r\n\r\n          }\r\n      ] \r\n    },\r\n  {\r\n    date: 'Jan 31, 2021',\r\n    id: '01-31-2021',\r\n    exercises: [\r\n        {\r\n            name: 'Sumo Deadlift',\r\n            sets: 3,\r\n            reps: 12,\r\n            weight: 135\r\n\r\n        },\r\n        {\r\n            name: 'Leg Curls',\r\n            sets: 2,\r\n            reps: 15,\r\n            weight: 315\r\n\r\n        },\r\n        {\r\n            name: 'Calf Raises',\r\n            sets: 5,\r\n            reps: 20,\r\n            weight: 225\r\n\r\n        }\r\n    ]\r\n  }\r\n]\r\n    //go to home page\r\n    //Login component checks if logged in - if you are goes to workouts\r\n    //else loads up login form\r\n    return (\r\n      \r\n      <Router>\r\n        <AuthProvider>\r\n          <MainNavigation />\r\n          <main>\r\n            <Switch>\r\n              <PrivateRoute exact path=\"/\" component={Dashboard} />\r\n              <PrivateRoute path=\"/update-profile\" component={UpdateProfile} />\r\n              <Route exact path='/signup' component={Signup} />\r\n              <Route path=\"/login\" component={Login} />\r\n              <Route path=\"/forgotpassword\" component={ForgotPassword} />\r\n              <Route path=\"/test\" component={Test} />\r\n              <Route path=\"/dailyworkouts\">\r\n                <WorkoutDays items={workoutData}/> \r\n              </Route>\r\n              <Route path=\"/dailyworkout/:date\">\r\n                <RecordWorkout />\r\n              </Route>\r\n              <Route path='/record'>\r\n                <WorkoutDays items={workoutData} />\r\n              </Route>\r\n            </Switch>\r\n          </main>\r\n        </AuthProvider>\r\n        \r\n      </Router>\r\n       \r\n    )\r\n}\r\n\r\nexport default App","C:\\Users\\dantr\\Documents\\Programming\\liftweights\\src\\components\\Navigation\\MainNavigation.js",[],"C:\\Users\\dantr\\Documents\\Programming\\liftweights\\src\\components\\Navigation\\NavigationLinks.js",[],"C:\\Users\\dantr\\Documents\\Programming\\liftweights\\src\\components\\Days\\WorkoutDays.js",[],"C:\\Users\\dantr\\Documents\\Programming\\liftweights\\src\\components\\Days\\WorkoutDay.js",[],"C:\\Users\\dantr\\Documents\\Programming\\liftweights\\src\\components\\Days\\RenderEachExercise.js",[],"C:\\Users\\dantr\\Documents\\Programming\\liftweights\\src\\components\\Calendar\\Calendar.js",[],"C:\\Users\\dantr\\Documents\\Programming\\liftweights\\src\\components\\Forms\\RecordWorkout.js",["82"],"import React, { useState, useRef } from 'react';\r\nimport { Link, useParams } from 'react-router-dom';\r\n\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport { db } from '../../firebase';\r\nimport { useAuth } from '../../contexts/AuthContext'\r\n\r\n\r\n\r\nconst RecordWorkout = () => {\r\n    const [loading, setLoading] = useState(false)\r\n    //grab the date from URL and use it as document name in database\r\n    const date = useParams().date;\r\n    //grab unique id created from database authentication\r\n    const { uid } = useAuth()\r\n    const nameRef = useRef();\r\n    const setsRef = useRef()\r\n    const repsRef = useRef()\r\n    const weightRef = useRef()\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        setLoading(true)\r\n        console.log(date);\r\n\r\n        db.collection(\"users\")\r\n          .doc(uid).collection(\"dates\")\r\n          .doc(date).collection(\"exercises\")\r\n          .doc().collection(\"exercise-details\")\r\n          .add({\r\n            name: nameRef.current.value,\r\n            sets: setsRef.current.value,\r\n            reps: repsRef.current.value,\r\n            weight: weightRef.current.value\r\n        }).then(()=>{\r\n            console.log('worked');\r\n            console.log(uid);\r\n            \r\n        }).catch(()=>{\r\n            console.log('did not work');\r\n        })\r\n    }\r\n\r\n\r\n    return (\r\n        <>  \r\n            <Link to={'/record'}>Back</Link>\r\n            <Form onSubmit={handleSubmit} className=\"container mt-5\">\r\n                <Form.Group controlId=\"exercise\">\r\n                    <Form.Label>Exercise</Form.Label>\r\n                    <Form.Control ref={nameRef} type=\"text\" placeholder=\"Exercise Name\" />\r\n                    <Form.Text className=\"text-muted\">\r\n                    \r\n                    </Form.Text>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"sets\">\r\n                    <Form.Label>Sets</Form.Label>\r\n                    <Form.Control ref={setsRef} type=\"text\" placeholder=\"How many sets did you do?\" />\r\n                </Form.Group>\r\n                <Form.Group controlId=\"reps\">\r\n                    <Form.Label>Reps</Form.Label>\r\n                    <Form.Control ref={repsRef} type=\"text\" placeholder=\"How many reps per set?\" />\r\n                    <Form.Text className=\"text-muted\">\r\n                    \r\n                    </Form.Text>\r\n                </Form.Group>\r\n                <Form.Group controlId=\"weight\">\r\n                    <Form.Label>Weight</Form.Label>\r\n                    <Form.Control ref={weightRef} type=\"text\" placeholder=\"How much gravity did you fight?\" />\r\n                    <Form.Text className=\"text-muted\">\r\n                    \r\n                    </Form.Text>\r\n                </Form.Group>\r\n                <Button variant=\"primary\" type=\"submit\">\r\n                    Submit\r\n                </Button>\r\n            </Form>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default RecordWorkout","C:\\Users\\dantr\\Documents\\Programming\\liftweights\\src\\components\\Forms\\Login.js",[],"C:\\Users\\dantr\\Documents\\Programming\\liftweights\\src\\components\\Forms\\Signup.js",[],"C:\\Users\\dantr\\Documents\\Programming\\liftweights\\src\\contexts\\AuthContext.js",["83"],"import React, { useContext, useState, useEffect } from 'react';\r\n//imports the auth module we just created in our firebase.js file\r\nimport { auth, db } from '../firebase'\r\n\r\n//creates a context object with name AuthContext\r\n//use this context inside of provider\r\nconst AuthContext = React.createContext()\r\n\r\n//this function allows us to use this context\r\nexport function useAuth() {\r\n    //This functions returns our useContext hook which takes in the Context object\r\n    //we created that we want to make use of. //This returns us the value that we passed in\r\n    //down at the provider - THE VALUE OBJECT!\r\n    return useContext(AuthContext)\r\n}\r\n\r\n//children props comes from context\r\nexport function AuthProvider({ children }) {\r\n    //our state for current user, by default we have no user\r\n    const[currentUser, setCurrentUser] = useState()\r\n    //initially we are loading and as soon as we get that first useEffect thats runs, it means\r\n    //firebase did the verification to see if there was a user\r\n    const [loading, setLoading] = useState(true)\r\n    const [uid, setUid] = useState('')\r\n\r\n    //function uses our auth module (firebase) to signup a user\r\n    //this method comes from firebase\r\n    //returns a promise\r\n    //whenever we call createUserWithEmailAndPassword it calls setCurrentUser and\r\n    //sets the user for us within onAuthStateChanged\r\n    //firebase creates the local storage for us as well as tokens - FIND THIS IN VIDEO\r\n    //gotta make sure we return these functions because they are promises\r\n    async function signup(email, password) {\r\n        const userCredential = await auth.createUserWithEmailAndPassword(email, password)\r\n        \r\n        setUid(userCredential.user.uid)\r\n        \r\n\r\n        // await db.collection(\"users\").doc(uid).set{{\r\n        //     email: email\r\n        // }}.then(()=>{\r\n        //     console.log('updated');\r\n        // }).catch(()=>{\r\n        //     console.log('failed');\r\n        // })\r\n        \r\n\r\n        // await userDocRef.set({\r\n        //     email: email\r\n        // }).then(() =>{\r\n        //     console.log('document update success');\r\n        // }).catch(()=>{\r\n        //     console.log('fail');\r\n        // })\r\n    }\r\n\r\n    function login (email, password) {\r\n        return auth.signInWithEmailAndPassword(email, password)\r\n    }\r\n\r\n    function logout () {\r\n        return auth.signOut()\r\n    }\r\n\r\n    function resetPassword(email) {\r\n        return auth.sendPasswordResetEmail(email)\r\n    }\r\n\r\n    function updateEmail (email) {\r\n        return currentUser.updateEmail(email)\r\n    }\r\n\r\n    function updatePassword (password) {\r\n        return currentUser.updatePassword(password)\r\n    }\r\n\r\n    useEffect(() => {\r\n        //onAuthStateChanged is firebase recommended method for getting the\r\n        //current user. We set an observer on the auth object\r\n        //we want onAuthStateChanged to be inside a useEffect and not in our render\r\n        //because we only want this to run when we mount our component (first time it loads)\r\n        //Unsubscribe to avoid memory leaks - when we initialize auth.onAuthStateChanged we\r\n        //create a listener to continue to listen even after we have stopped using it, wasting\r\n        //memory. to prevent we unsubscribe from listener when we unmount app\r\n        //auth.onAuthStateChanged when called, will return a method that when we call unsubscribe\r\n        //it will unsubscribe the onauthostatechanged event\r\n        const unsubscribe = auth.onAuthStateChanged(user => {\r\n            setCurrentUser(user)\r\n            //Whenever auth state actually changes, it means we are done loading\r\n            setLoading(false)\r\n            \r\n        })\r\n        //this will unsubscribe us from the onauthstatechanged listener when we unmount the\r\n        //component\r\n        return unsubscribe\r\n    }, [])\r\n    \r\n    //this object is passed to our provider, we want current user\r\n    //also pass signup so we can use anywhere\r\n    const value = {\r\n        uid,\r\n        currentUser,\r\n        signup,\r\n        login,\r\n        logout,\r\n        resetPassword,\r\n        updateEmail,\r\n        updatePassword\r\n    }\r\n\r\n    //children are the components between our <AuthProvider> Tags in the\r\n    //App.js file!\r\n    //the value returns all of the information that can be accessed from any of our children\r\n    //components - in this case it is our authentication info\r\n    //simple check to see if we are loading because if we are not loading then we render the\r\n    //children otherwise we want to not render the children because we are loading\r\n    //none of our application will render unless we have our user for the first time\r\n    return (\r\n        <AuthContext.Provider value={value}>\r\n            {!loading && children}\r\n        </AuthContext.Provider>\r\n    )\r\n}\r\n\r\n","C:\\Users\\dantr\\Documents\\Programming\\liftweights\\src\\firebase.js",[],"C:\\Users\\dantr\\Documents\\Programming\\liftweights\\src\\components\\Dashboard\\Dashboard.js",[],"C:\\Users\\dantr\\Documents\\Programming\\liftweights\\src\\components\\Routes\\PrivateRoutes.js",[],"C:\\Users\\dantr\\Documents\\Programming\\liftweights\\src\\components\\Forms\\ForgotPassword.js",[],"C:\\Users\\dantr\\Documents\\Programming\\liftweights\\src\\components\\Profile\\UpdateProfile.js",[],"C:\\Users\\dantr\\Documents\\Programming\\liftweights\\src\\components\\Test.js",["84"],"import React, { useState } from 'react';\r\n\r\nimport { db } from '../firebase'\r\n\r\n\r\nconst Test = () => {\r\n    \r\n\r\n    db.collection(\"users\")\r\n      .add({\r\n          name: 'John',\r\n          email: \"john@smith.com\"\r\n      })\r\n      .then(() => {\r\n          alert(\"worked\")\r\n      })\r\n      .catch(()=>{\r\n          alert(\"failed\")\r\n      })\r\n\r\n    // db.collection('users')\r\n    //   .get()\r\n    //   .then( snapshot => {\r\n    //       console.log(snapshot);\r\n    //   })\r\n    //   .catch(error => console.log(error))\r\n    return (\r\n        <div>\r\n          Test\r\n        </div>\r\n    \r\n      )\r\n}\r\n\r\n\r\nexport default Test",{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","severity":1,"message":"90","line":9,"column":8,"nodeType":"91","messageId":"92","endLine":9,"endColumn":18},{"ruleId":"89","severity":1,"message":"93","line":11,"column":12,"nodeType":"91","messageId":"92","endLine":11,"endColumn":19},{"ruleId":"89","severity":1,"message":"94","line":3,"column":16,"nodeType":"91","messageId":"92","endLine":3,"endColumn":18},{"ruleId":"89","severity":1,"message":"95","line":1,"column":17,"nodeType":"91","messageId":"92","endLine":1,"endColumn":25},"no-native-reassign",["96"],"no-negated-in-lhs",["97"],"no-unused-vars","'WorkoutDay' is defined but never used.","Identifier","unusedVar","'loading' is assigned a value but never used.","'db' is defined but never used.","'useState' is defined but never used.","no-global-assign","no-unsafe-negation"]